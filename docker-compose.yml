version: "3.8"

# Define the services that make up the application.
services:
  # Define the MongoDB service for the hotel service database.
  hotel-service-db:
    image: mongo:latest # Use the latest MongoDB image from Docker Hub.
    container_name: hotel-service-db-container # Name the container for easy identification.
    ports:
      - "27017:27017" # Map port 27017 on the host to port 27017 on the container to allow external access.
    volumes:
      - mongodb_data:/data/db # Persist MongoDB data using a Docker volume to ensure data is not lost when the container stops.
    networks:
      - app-network # Connect this service to the app-network network.

  # Define the hotel service application.
  hotel-service:
    build: ./hotel-service # Build the image from the Dockerfile located in the hotel-service directory.
    image: hotel-service:latest
    container_name: hotel-service-container

    # * We are not exposing ports here as it will be accessed internally via the reverse proxy (nginx).
    networks:
      - app-network
    depends_on:
      - hotel-service-db # Ensure the hotel-service-db service starts before this service.
    environment:
      - DATABASE_URL=mongodb://hotel-service-db:27017/hotels # Set the database URL for the hotel service to connect to MongoDB.

  # Define the booking service application.
  booking-service:
    build: ./booking-service # Build the image from the Dockerfile located in the booking-service directory.
    image: booking-service:latest
    container_name: booking-service-container
    # * We are not exposing ports here as it will be accessed internally via the reverse proxy (nginx).
    networks:
      - app-network
    depends_on:
      - hotel-service # Ensure the hotel-service starts before this service.
    environment:
      - HOTEL_SERVICE_URL=http://hotel-service:3000 # Set the hotel service URL for the booking service to communicate with the hotel service.

  # Define the Nginx reverse proxy service.
  nginx:
    image: nginx:latest # Use the latest Nginx image from Docker Hub.
    container_name: nginx-container
    ports:
      - "80:80" # Map port 80 on the host to port 80 on the container to allow external access.
    networks:
      - app-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Mount the custom Nginx configuration file from the host to the container.
    depends_on:
      - booking-service # Ensure the booking-service starts before this service.
      - hotel-service # Ensure the hotel-service starts before this service.

# Define Docker volumes to persist data.
volumes:
  mongodb_data: # Define a volume for persisting MongoDB data.

# Define Docker networks for service communication.
networks:
  app-network:
    driver: bridge # Use the bridge network driver for the app-network. So that the containers inside this network can communicate with each other.
